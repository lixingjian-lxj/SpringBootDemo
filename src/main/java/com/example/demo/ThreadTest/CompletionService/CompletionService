为了解决Future类的阻塞性，可以使用JDK1.5提供的CompletionService类
CompletionService：功能是以异步的方式一边生产新的任务，一边处理已完成任务的结果，这样可以将执行任务与处理任务分离开进行处理。
使用submit()提交任务，使用take()取得以完成的任务，并按照任务的时间顺序处理他们。
CompletionService对于异常的处理：可以对异常进行捕获处理
（1）当调用take()方法时：不会抛出异常，会返回Future对象，但是对象信息也会有显示
结果如下：
java.util.concurrent.FutureTask@6659c656[Completed normally]
java.util.concurrent.FutureTask@2328c243[Completed exceptionally: java.lang.Exception: pool-1-thread-1抛出异常]
java.util.concurrent.FutureTask@bebdb06[Completed normally]
（2）当调用get()方法的时候：出现异常，就会进入catch块处理异常